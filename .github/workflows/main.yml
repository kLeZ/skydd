name: SkyDD Build
on: [ push, pull_request ]
jobs:
  build:
    name: SkyDD on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: Show information
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          gu --version
          native-image --version
          ./mvnw --version
      - name: Build and run SkyDD on Linux and macOS
        run: ./mvnw -Pnative clean verify native:compile
      - name: Version
        run: ./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout > VERSION
        id: version
      - name: Upload artifacts for ${{ runner.os }}
        uses: actions/upload-artifact@v2
        with:
          name: skydd-${{ runner.os }}-${{ runner.arch }}
          path: |
            target/skydd*
            LICENSE
            VERSION
      - run: echo "üçè This job's status is ${{ job.status }}."
  release:
    name: SkyDD Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Download artifact
      uses: actions/download-artifact@v2
      id: download
    - run: ls -lhR .
      working-directory: ${{steps.download.outputs.download-path}}
    - name: Copy version and license files from first directory
      run: |
        export DIR="$(ls -1 | head -1)"
        cp ${DIR}/VERSION .
        cp ${DIR}/LICENSE .
      working-directory: ${{steps.download.outputs.download-path}}
    - name: Create release archives
      run: find . -type d -iname 'skydd-*' -exec tar czf {}.tar.gz {} \;
      working-directory: ${{steps.download.outputs.download-path}}
    - name: Extract release binaries
      run: find . -type d -iname 'skydd-*' -exec cp {}/target/skydd {} \;
      working-directory: ${{steps.download.outputs.download-path}}
    - name: Read Version
      run: echo "::set-output name=version::$(cat VERSION)"
      id: version
      working-directory: ${{steps.download.outputs.download-path}}
    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        title: "Release v${{ steps.version.outputs.version }}"
        prerelease: false
        automatic_release_tag: "v${{ steps.version.outputs.version }}"
        files: |
          ${{steps.download.outputs.download-path}}/LICENSE
          ${{steps.download.outputs.download-path}}/VERSION
          ${{steps.download.outputs.download-path}}/skydd-*
